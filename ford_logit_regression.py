# -*- coding: utf-8 -*-
"""Ford Logit regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tCidOV23o_GHF1D-rkiZwYvkqg4hL5S6
"""

import pandas as pd   #import pandas
import statsmodels.api as sm    # import statsmodel
import matplotlib.pyplot as plt    #import matplotlib
import seaborn as sns     #import seaborn
import scipy.stats as scipy    #import "scipy"
import sys

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('/content/motor.csv') #create dataframe

df.head(6) #ensuring dataframe was created

file = open("Motor_stats.txt","w") #open a file for writing
sys.stdout = file #redirects output to file instead

print(df.describe())

#Defining simple linear regression variables
x = df['FORD?'] #independent variable
y = df['FATAL?'] #dependent variable

x = sm.add_constant(x)  # adding a constant / y intercept, referring back to df['FORD']
model1 = sm.Logit(y, x).fit()  # Fit a logistic regression model
results_model1 = model1.summary() #saves comprehensive report (intercept, coefficients, standard error, z, p alue, etc) to results_model1
print(results_model1) #directing results_model1 to motor_stats.txt

model1.summary() #ensuring summary correctly displays

#Defining multiple linear regression variables
x = df[['FORD?','VEHICLE_OCCUPANTS','LICENSED?','NUMBER OF PERSONS INJURED','VEHICLE_AGE','FEMALE?','DAYTIME?']] ##Defining independent variables
y = df['FATAL?'] #Defining the dependent variable

x = sm.add_constant(x)  # adding a constant / y intercept, referring back to x from code above
model2 = sm.Logit(y, x).fit() #fit multi logistic regression model
results_model2 = model2.summary() #saves comprehensive report (intercept, coefficients, standard error, z, p alue, etc) to results_model2
print(results_model2) #directing results_model1 to motor_stats.txt

file.close() #close the file